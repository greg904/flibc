WHAT IS FLIBC

flibc is a collection of :
- Routines to interact with the Linux operating system without the help of the
  C standard library.
- Tools to help building executables that do not depend on the standard C
  library.

Contrary to the standard C library, flibc is made to never incur any general
cost in your application: if you don't use a part of flibc, it should not be
be included in the resulting application.

WHY USE FLIBC

You might want to consider about not using the C standard library and using a
replacement for it instead, such as flibc, when the following conditions apply:
- You have a small project with the following constraints: it will be built in
  C and will run as a program on the Linux operating system.
- You want to make the best use of the hardware.
- You prioritize low memory usage and low power usage instead of speed and ease
  of development/iteration.

CODE STYLE

The code is written using tabs for indentation. The reasons to use tabs instead
of spaces are:
- Because a single tab character takes up less storage space that multiple
  space characters.
- To let the developer choose the indentation's width to display in their code
  editor, even on basic code editors.

Other code style rules are defined in the .clang-format and .editorconfig files
in the root directory.

Using automatic tools like clang-format allows the code base to stay uniform
and the programmer to not have to think about code style rules most of the
time.

